- name: Setup Webhook and HTTP Server for Results
  hosts: host
  become: yes
  vars:
    flask_app_path: /opt/data_pipeline/webhook_server.py
    flask_app_port: 8080
    results_path: /mnt/results

  tasks:
    - name: Install Flask (for the Webhook server)
      pip:
        name: flask
        state: present

    - name: Ensure /opt/data_pipeline directory exists
      file:
        path: /opt/data_pipeline
        state: directory
        owner: almalinux
        group: almalinux
        mode: '0755'

    - name: Copy webhook_server.py
      copy:
        src: ../../scripts/webhook_server.py
        dest: "{{ flask_app_path }}"
        mode: '0755'
        owner: almalinux
        group: almalinux

    - name: Copy update_disabled_workers.py (AlertManager script)
      template:
        src: ../roles/alert_manager/templates/update_disabled_workers.py.j2
        dest: /opt/data_pipeline/update_disabled_workers.py
        mode: '0755'
        owner: almalinux
        group: almalinux
      notify: restart_webhook_server

    - name: Create systemd service for webhook_server
      copy:
        dest: /etc/systemd/system/webhook_server.service
        owner: root
        group: root
        mode: '0644'
        content: |
          [Unit]
          Description=Alertmanager Webhook Server
          After=network.target

          [Service]
          Type=simple
          User=almalinux
          Group=almalinux
          WorkingDirectory=/opt/data_pipeline
          ExecStart=/usr/bin/python3 {{ flask_app_path }}
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: restart_webhook_server

    - name: Start and enable the webhook server
      systemd:
        name: webhook_server
        state: started
        enabled: yes

    - name: Open port 8080 in the firewall for the webhook server
      firewalld:
        port: 8080/tcp
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_service_mgr == 'systemd'

    - name: Reload firewalld for webhook port
      service:
        name: firewalld
        state: reloaded
      when: ansible_service_mgr == 'systemd'

    - name: Install Apache httpd
      yum:
        name: httpd
        state: present

    - name: Start and enable Apache httpd
      systemd:
        name: httpd
        state: started
        enabled: yes

    - name: Link /mnt/results to /var/www/html/results
      file:
        src: "{{ results_path }}"
        dest: /var/www/html/results
        state: link

    - name: Ensure /mnt/results is world-readable (recursively)
      become: yes
      file:
        path: /mnt/results
        mode: '0755'
        recurse: yes
      ignore_errors: true

      
    - name: Gather mount facts
      ansible.builtin.setup:
        gather_subset:
          - mounts

    - name: Check if /mnt/results is on NFS
      set_fact:
        results_is_nfs: >-
          {{ ansible_mounts
            | selectattr('mount', 'equalto', '/mnt/results')
            | map(attribute='fstype')
            | list
            | first
            == 'nfs' }}

    - name: Allow httpd to read from NFS
      seboolean:
        name: httpd_use_nfs
        state: true
        persistent: yes
      when:
        - ansible_selinux is defined
        - ansible_selinux.status == 'enabled'


    - name: Create /etc/httpd/conf.d/results.conf (directory listing)
      copy:
        dest: /etc/httpd/conf.d/results.conf
        owner: root
        group: root
        mode: '0644'
        content: |
          <Directory "/var/www/html/results">
              # Allow symlink from /var/www/html/results â†’ /mnt/results
              Options +Indexes +FollowSymLinks

              # Provide a more readable auto-index style:
              IndexOptions FancyIndexing HTMLTable VersionSort NameWidth=*

              AllowOverride None
              Require all granted
          </Directory>
      notify: restart_httpd

    - name: Allow port 80/tcp in the firewall
      firewalld:
        port: 80/tcp
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_service_mgr == 'systemd'

    - name: Reload firewalld for http port
      service:
        name: firewalld
        state: reloaded
      when: ansible_service_mgr == 'systemd'


    - name: Deploy custom index.html
      copy:
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: '0644'
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>Proteomics Results</title>
            <style>
              body {
                font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #efefef;
              }
              header {
                background-color: #333;
                color: #fff;
                padding: 20px;
                text-align: center;
              }
              header h1 {
                margin: 0;
                font-size: 28px;
                letter-spacing: 1px;
              }
              .container {
                max-width: 800px;
                margin: 30px auto;
                background: #fff;
                padding: 30px;
                box-shadow: 0 2px 6px rgba(0,0,0,0.1);
                border-radius: 5px;
              }
              h2 {
                color: #333;
                margin-bottom: 15px;
              }
              p {
                line-height: 1.6;
                color: #555;
              }
              a {
                color: #0066cc;
                text-decoration: none;
                font-weight: 600;
              }
              a:hover {
                text-decoration: underline;
              }
              footer {
                text-align: center;
                font-size: 14px;
                color: #888;
                margin: 20px 0;
              }
            </style>
          </head>
          <body>
            <header>
              <h1>Proteomics Results</h1>
            </header>
            <div class="container">
              <h2>Welcome!</h2>
              <p>
                This server provides access to <strong>parsed proteomics results</strong>.
                You can either <strong>browse</strong> them directly or
                <strong>download</strong> for offline analysis.
              </p>
              <p>
                <a href="/results/">Click here to view the <em>Results Directory</em></a>
              </p>
              <p>Enjoy exploring your proteomics data!</p>
            </div>
            <footer>
              &copy; 2025 Your Research Group. All rights reserved.
            </footer>
          </body>
          </html>
      notify: restart_httpd

  handlers:
    - name: restart_webhook_server
      systemd:
        name: webhook_server
        state: restarted

    - name: restart_httpd
      systemd:
        name: httpd
        state: restarted
