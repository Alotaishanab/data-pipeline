- name: Setup Webhook and HTTP Server for Results
  hosts: host
  become: yes
  vars:
    flask_app_path: /opt/data_pipeline/webhook_server.py
    flask_app_port: 8080
    results_path: /mnt/results

  tasks:
    - name: Install Flask
      pip:
        name: flask
        state: present

    - name: Ensure pipeline directory exists
      file:
        path: /opt/data_pipeline
        state: directory
        owner: almalinux
        group: almalinux
        mode: '0755'

    - name: Copy webhook_server.py
      copy:
        src: ../../scripts/webhook_server.py
        dest: "{{ flask_app_path }}"
        mode: '0755'
        owner: almalinux
        group: almalinux

    - name: Template update_disabled_workers.py
      template:
        src: ../roles/alert_manager/templates/update_disabled_workers.py.j2
        dest: /opt/data_pipeline/update_disabled_workers.py
        mode: '0755'
        owner: almalinux
        group: almalinux
      notify: restart_webhook_server

    - name: Create systemd service for webhook_server
      copy:
        dest: /etc/systemd/system/webhook_server.service
        content: |
          [Unit]
          Description=Alertmanager Webhook Server
          After=network.target

          [Service]
          Type=simple
          User=almalinux
          Group=almalinux
          WorkingDirectory=/opt/data_pipeline
          ExecStart=/usr/bin/python3 {{ flask_app_path }}
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: restart_webhook_server

    - name: Start and enable the webhook server
      systemd:
        name: webhook_server
        state: started
        enabled: yes

    - name: Allow port 8080 in firewall for webhook server
      firewalld:
        port: 8080/tcp
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_service_mgr == 'systemd'

    - name: Reload firewalld (webhook port)
      service:
        name: firewalld
        state: reloaded
      when: ansible_service_mgr == 'systemd'

    # Install and configure Apache HTTP server
    - name: Install Apache httpd
      yum:
        name: httpd
        state: present

    - name: Start and enable httpd
      systemd:
        name: httpd
        state: started
        enabled: yes

    - name: Link results directory to web root
      file:
        src: "{{ results_path }}"
        dest: /var/www/html/results
        state: link

    - name: Enable directory listing for /results
      copy:
        dest: /etc/httpd/conf.d/results.conf
        owner: root
        group: root
        mode: '0644'
        content: |
          <Directory "/var/www/html/results">
            Options +Indexes +FollowSymLinks
            AllowOverride None
            Require all granted
          </Directory>
      notify: restart_httpd

    # EXPLICITLY open port 80 if you want to see it in 'list-ports'
    - name: Allow port 80/tcp in the firewall
      firewalld:
        port: 80/tcp
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_service_mgr == 'systemd'

    - name: Reload firewalld (http port)
      service:
        name: firewalld
        state: reloaded
      when: ansible_service_mgr == 'systemd'

    - name: Deploy custom index.html
      copy:
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: '0644'
        content: |
          <html>
          <head><title>Proteomics Results</title></head>
          <body>
            <h1>Welcome to the Proteomics Results</h1>
            <p>Browse the <a href="/results/">results directory</a> to download your files.</p>
          </body>
          </html>
      notify: restart_httpd

  handlers:
    - name: restart_webhook_server
      systemd:
        name: webhook_server
        state: restarted

    - name: restart_httpd
      systemd:
        name: httpd
        state: restarted
