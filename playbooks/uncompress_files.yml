---
- name: Uncompress .pdb.gz and .cif.gz files using pigz and GNU Parallel
  hosts: storage
  become: yes
  vars:
    datasets_dirs:
      - /mnt/datasets/human_proteome
      - /mnt/datasets/ecoli_proteome
    parallel_jobs: 4  # Adjust based on CPU cores
  tasks:
    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present
      tags: install_epel

    - name: Install pigz and GNU Parallel
      yum:
        name:
          - pigz
          - parallel
        state: present
      tags: install_tools

    - name: Find all .gz files
      find:
        paths: "{{ item }}"
        patterns: "*.pdb.gz,*.cif.gz"
        recurse: yes
        file_type: file
      loop: "{{ datasets_dirs }}"
      register: found_files
      tags: find_files

    - name: Combine all found files into a single list
      set_fact:
        files_to_uncompress: "{{ files_to_uncompress | default([]) + item.files }}"
      loop: "{{ found_files.results }}"
      when: item.matched > 0
      tags: set_fact

    - name: Debug - Number of files to uncompress
      debug:
        msg: "Number of files to uncompress: {{ files_to_uncompress | length }}"
      when: files_to_uncompress is defined
      tags: debug

    - name: Uncompress files in parallel using GNU Parallel and pigz
      block:
        - name: Create a list of files to uncompress
          copy:
            content: "{{ files_to_uncompress | map(attribute='path') | join('\n') }}"
            dest: /tmp/files_to_uncompress.txt
            mode: '0644'
          when: files_to_uncompress | length > 0
          tags: create_file_list

        - name: Uncompress files in parallel
          shell: |
            cat /tmp/files_to_uncompress.txt | parallel -j {{ parallel_jobs }} 'pigz -d -f "{}"'
          args:
            executable: /bin/bash
          when: files_to_uncompress | length > 0
          tags: uncompress_files

        - name: Remove the temporary file list
          file:
            path: /tmp/files_to_uncompress.txt
            state: absent
          when: files_to_uncompress | length > 0
          tags: cleanup

      when: files_to_uncompress is defined and files_to_uncompress | length > 0
      tags: uncompress_block

    - name: Verify uncompression by counting original files
      find:
        paths: "{{ item }}"
        patterns: "*.pdb,*.cif"
        recurse: yes
        file_type: file
      loop: "{{ datasets_dirs }}"
      register: original_files
      tags: verify_uncompression

    - name: Debug - Number of uncompressed files
      debug:
        msg: "Total number of uncompressed files: {{ original_files.results | map(attribute='matched') | sum }}"
      tags: debug
