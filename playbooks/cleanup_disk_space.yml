---
- name: Cleanup Disk Space on All VMs
  hosts: all
  become: yes
  tasks:

    - name: Clean YUM/DNF cache
      package:
        name: "*"
        state: latest
      when: ansible_facts['pkg_mgr'] in ['dnf', 'yum']

    - name: Clean APT cache
      apt:
        autoclean: yes
        autoremove: yes
        clean: yes
      when: ansible_facts['pkg_mgr'] == 'apt'

    - name: Remove old kernels (keep latest 2)
      shell: |
        package-cleanup --oldkernels --count=2 -y
      args:
        warn: false
      when: ansible_facts['pkg_mgr'] in ['dnf', 'yum']

    - name: Remove unused packages
      package:
        name: "*"
        state: absent
        autoremove: yes
      when: ansible_facts['pkg_mgr'] in ['dnf', 'yum']

    - name: Clean pip cache
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/root/.cache/pip"
        - "/home/*/.cache/pip"
      ignore_errors: yes

    - name: Truncate large log files
      find:
        paths: /var/log
        patterns: "*.log"
        recurse: yes
        size: "+100M"
      register: large_logs

    - name: Truncate log files over 100MB
      file:
        path: "{{ item.path }}"
        state: touch
        mode: '0644'
      loop: "{{ large_logs.files }}"
      when: large_logs.matched > 0

    - name: Remove temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/*
        - /var/tmp/*
      ignore_errors: yes

    - name: Find and remove large unused files (optional)
      shell: |
        find / -type f -size +500M -exec ls -lh {} \; | awk '{ print $NF }' > /tmp/large_files.txt
      args:
        warn: false

    - name: Review large files before deletion
      debug:
        msg: "Large file found: {{ item }}"
      with_lines: cat /tmp/large_files.txt

    - name: Check disk usage after cleanup
      command: df -h
      register: disk_usage

    - name: Display disk usage
      debug:
        var: disk_usage.stdout_lines
