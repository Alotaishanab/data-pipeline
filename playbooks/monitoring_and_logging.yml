---
- name: Setup Monitoring and Logging on All Hosts
  hosts: all
  become: yes
  tasks:
    #### Install Prometheus Node Exporter
    - name: Install Prometheus Node Exporter
      block:
        - name: Download Node Exporter binary
          get_url:
            url: "https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz"
            dest: "/tmp/node_exporter.tar.gz"

        - name: Extract Node Exporter
          unarchive:
            src: "/tmp/node_exporter.tar.gz"
            dest: "/usr/local/bin/"
            remote_src: yes
            creates: /usr/local/bin/node_exporter

        - name: Ensure Node Exporter binary is executable
          file:
            path: /usr/local/bin/node_exporter
            mode: '0755'

        - name: Create Node Exporter service
          copy:
            dest: /etc/systemd/system/node_exporter.service
            content: |
              [Unit]
              Description=Node Exporter
              After=network.target

              [Service]
              User=root
              ExecStart=/usr/local/bin/node_exporter
              Restart=always

              [Install]
              WantedBy=multi-user.target

        - name: Reload systemd daemon for Node Exporter
          systemd:
            daemon_reload: yes

        - name: Start and enable Node Exporter service
          systemd:
            name: node_exporter
            state: started
            enabled: yes

- name: Install and Configure Prometheus on Control Node
  hosts: localhost
  become: yes
  tasks:
    - name: Install required packages
      yum:
        name:
          - wget
          - yum-utils
        state: present

    - name: Import Prometheus GPG Key
      rpm_key:
        state: present
        key: "https://rpm.public.packages.cloud/prometheus/rpm/repodata/repomd.xml.key"

    - name: Add Prometheus repository
      yum_repository:
        name: prometheus
        description: "Prometheus Repository"
        baseurl: "https://rpm.public.packages.cloud/prometheus/rpm"
        gpgcheck: yes
        enabled: yes
        gpgkey: "https://rpm.public.packages.cloud/prometheus/rpm/repodata/repomd.xml.key"

    - name: Install Prometheus
      yum:
        name: prometheus
        state: present

    - name: Configure Prometheus
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Ensure Prometheus directories have correct ownership
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        recurse: yes
      loop:
        - /var/lib/prometheus
        - /etc/prometheus

    - name: Start and enable Prometheus service
      systemd:
        name: prometheus
        state: started
        enabled: yes

- name: Install and Configure Grafana on Control Node
  hosts: localhost
  become: yes
  tasks:
    - name: Add Grafana repository
      yum_repository:
        name: grafana
        description: Grafana Repository
        baseurl: https://packages.grafana.com/oss/rpm
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://packages.grafana.com/gpg.key
        enabled: yes

    - name: Install Grafana
      yum:
        name: grafana
        state: present

    - name: Install initscripts package (for systemd-sysv-install)
      yum:
        name: initscripts
        state: present

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Ensure Grafana directories have correct ownership
      file:
        path: "{{ item }}"
        state: directory
        owner: grafana
        group: grafana
        recurse: yes
      loop:
        - /var/lib/grafana
        - /var/log/grafana
        - /etc/grafana

    - name: Start and enable Grafana service
      systemd:
        name: grafana-server
        state: started
        enabled: yes

    - name: Fetch Grafana service logs
      shell: journalctl -u grafana-server -b --no-pager
      register: grafana_logs
      ignore_errors: yes

    - name: Display Grafana service logs
      debug:
        var: grafana_logs.stdout

    - name: Verify default Grafana service file exists
      stat:
        path: /usr/lib/systemd/system/grafana-server.service
      register: default_grafana_service

    - name: Debug default Grafana service file status
      debug:
        msg: "Default Grafana service file exists: {{ default_grafana_service.stat.exists }}"

- name: Configure Logging on All Hosts
  hosts: all
  become: yes
  tasks:
    - name: Install rsyslog
      yum:
        name: rsyslog
        state: present

    - name: Configure rsyslog to send logs to control node
      lineinfile:
        path: /etc/rsyslog.conf
        regexp: '^\*\.\*'
        line: "*.* @@{{ ansible_host | default('localhost') }}:514"  # Replace with control node IP if needed
        state: present

    - name: Restart rsyslog
      systemd:
        name: rsyslog
        state: restarted
